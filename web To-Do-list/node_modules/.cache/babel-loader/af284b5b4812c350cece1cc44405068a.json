{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heshan\\\\Desktop\\\\react-js\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\n/*\nChallenge:\n\nGiven a stateless functional component:\n1. Follow the steps necessary to add state to it,\n2. Have state keep track of whether the user is logged in or not\n3. Add a button that logs the user in/out\n    a. extra challenge - make the button display \"log in\" if they're not logged in and \"log out\" if they are\n4. Display text that says \"Logged in\" if the user is logged in, or \"Logged out\" if they're not.\n*/\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prev => {\n      prev.isLoggedIn = !prev.isLoggedIn;\n      return {\n        isLoggedIn: prev.isLoggedIn\n      };\n    });\n    console.log(this.state.isLoggedIn);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.isLoggedIn), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Change\"));\n  }\n\n}\n\nexport default App; // import React ,{Component} from 'react';\n// import toDoData from './toDoData';\n// import ToDo from './ToDo';\n// import './App.css'\n// class App extends Component{\n//   constructor(){\n//     super();\n//     this.state={\n//                 toDos:toDoData\n//                 }\n//     this.handleChange=this.handleChange.bind(this);\n//   }\n//   handleChange(id){\n//     this.setState((prev)=>{\n//                           const updatedState=prev.toDos.map((toDoItem)=>{\n//                               if(toDoItem.id===id){\n//                                 toDoItem.completed= !toDoItem.completed;\n//                               }\n//                           return toDoItem\n//                           });\n//            return{\n//             toDos:updatedState\n//           }  \n//     });\n//   }\n//   render(){\n//     const components=toDoData.map((item)=>{\n//                   return (<ToDo id={item.id} item={item} handleChange={this.handleChange}/>);\n//                 });\n//     return(\n//       <div className=\"do-list\">  \n//         {components}\n//       </div>  \n//     );            \n//   }\n// }\n// export default App;","map":{"version":3,"sources":["C:\\Users\\heshan\\Desktop\\react-js\\src\\App.js"],"names":["React","Component","App","constructor","state","isLoggedIn","handleClick","bind","setState","prev","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAGA;;;;;;;;;;;AAWA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAExBE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACCC,MAAAA,UAAU,EAAC;AADZ,KAAX;AAGC,SAAKC,WAAL,GAAiB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjB;AACJ;;AAEDD,EAAAA,WAAW,GAAE;AACT,SAAKE,QAAL,CAAeC,IAAD,IAAQ;AACpBA,MAAAA,IAAI,CAACJ,UAAL,GAAkB,CAACI,IAAI,CAACJ,UAAxB;AACA,aAAM;AACFA,QAAAA,UAAU,EAACI,IAAI,CAACJ;AADd,OAAN;AAGD,KALD;AAMAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,UAAvB;AACH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKR,KAAL,CAAWC,UAAhB,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH;;AA3BuB;;AA8B5B,eAAeJ,GAAf,C,CAOA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA","sourcesContent":["import React,{Component} from \"react\";\n\n\n/*\nChallenge:\n\nGiven a stateless functional component:\n1. Follow the steps necessary to add state to it,\n2. Have state keep track of whether the user is logged in or not\n3. Add a button that logs the user in/out\n    a. extra challenge - make the button display \"log in\" if they're not logged in and \"log out\" if they are\n4. Display text that says \"Logged in\" if the user is logged in, or \"Logged out\" if they're not.\n*/\n\nclass App extends Component {\n    \n    constructor(){\n        super();\n        this.state={\n                    isLoggedIn:false\n                }\n         this.handleClick=this.handleClick.bind(this);       \n    }\n    \n    handleClick(){\n        this.setState((prev)=>{\n          prev.isLoggedIn = !prev.isLoggedIn;\n          return{\n              isLoggedIn:prev.isLoggedIn\n            }\n        });\n        console.log(this.state.isLoggedIn);\n    }\n    \n    render(){\n        return (\n            <div>\n                <h1>{this.state.isLoggedIn}</h1>\n                <button onClick={this.handleClick}>Change</button>    \n            </div>\n        );\n    }\n}\n\nexport default App\n\n\n\n\n\n\n// import React ,{Component} from 'react';\n// import toDoData from './toDoData';\n// import ToDo from './ToDo';\n// import './App.css'\n\n// class App extends Component{\n\n//   constructor(){\n//     super();\n//     this.state={\n//                 toDos:toDoData\n//                 }\n//     this.handleChange=this.handleChange.bind(this);\n//   }\n\n//   handleChange(id){\n//     this.setState((prev)=>{\n//                           const updatedState=prev.toDos.map((toDoItem)=>{\n//                               if(toDoItem.id===id){\n//                                 toDoItem.completed= !toDoItem.completed;\n//                               }\n//                           return toDoItem\n//                           });\n\n//            return{\n//             toDos:updatedState\n//           }  \n//     });\n//   }\n \n//   render(){\n//     const components=toDoData.map((item)=>{\n//                   return (<ToDo id={item.id} item={item} handleChange={this.handleChange}/>);\n//                 });\n\n  \n//     return(\n//       <div className=\"do-list\">  \n//         {components}\n//       </div>  \n//     );            \n  \n//   }\n\n\n// }\n\n\n// export default App;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}